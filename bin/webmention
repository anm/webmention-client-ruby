#!/usr/bin/env ruby

$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), '..', 'lib'))

require 'link_header'
require 'webmention'

def debug(msg)
  puts msg
end

url = ARGV[0]

if url.nil?
  puts 'Usage: webmention https://source.example.com/post/100'
  exit 1
end

unless Webmention::Client.valid_http_url?(url)
  puts "`#{url}` is not a valid URL."
  exit 1
end

client = Webmention::Client.new(url)

debug("Crawling `#{url}` for links...")

client.crawl

links = client.links

debug("Links found: #{links.length}")
debug(links.to_a.map { |link| "\t#{link}" }.join("\n"))

debug('')

links.each do |link|
  debug(link)

  endpoint = Webmention::Endpoint.discover(link)

  unless endpoint
    debug("\tNo webmention endpoint found at `#{link}`.")
    next
  end

  debug("\tDiscovered webmention endpoint: #{endpoint}")
  debug("\tSending webmention...")

  result = Webmention::Client.send_mention(endpoint, url, link, true)

  unless result
    debug("\tEncountered an unknown error sending this webmention!")
    next
  end

  debug("\tHTTP status code: #{result.code}")

  link_headers = result.headers['link']

  if link_headers
    status_link = LinkHeader.parse(link_headers).find_link(%w[rel status])

    debug("\tWebmention status URL: #{status_link.href}") if status_link
  end

  debug ''
end
